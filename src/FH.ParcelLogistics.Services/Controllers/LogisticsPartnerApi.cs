/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.22.1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using FH.ParcelLogistics.Services.Attributes;
using FH.ParcelLogistics.Services.DTOs;

namespace FH.ParcelLogistics.Services.Controllers {
	/// <summary>
	/// 
	/// </summary>
	[ApiController]
	public class LogisticsPartnerApiController : ControllerBase {
		/// <summary>
		/// Transfer an existing parcel into the system from the service of a logistics partner. 
		/// </summary>
		/// <param name="trackingId">The tracking ID of the parcel. E.g. PYJRB4HZ6 </param>
		/// <param name="parcel"></param>
		/// <response code="200">Successfully transitioned the parcel</response>
		/// <response code="400">The operation failed due to an error.</response>
		/// <response code="409">A parcel with the specified trackingID is already in the system.</response>
		[HttpPost]
		[Route("/parcel/{trackingId}")]
		[Consumes("application/json")]
		[ValidateModelState]
		[SwaggerOperation("TransitionParcel")]
		[SwaggerResponse(statusCode: 200, type: typeof(NewParcelInfo),
			description: "Successfully transitioned the parcel")]
		[SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
		public virtual IActionResult TransitionParcel(
			[FromRoute(Name = "trackingId")] [Required] [RegularExpression("^[A-Z0-9]{9}$")] string trackingId,
			[FromBody] Parcel parcel) {
			//TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(200, default(NewParcelInfo));
			//TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(400, default(Error));
			//TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(409);
			string exampleJson = null;
			exampleJson = "{\n  \"trackingId\" : \"PYJRB4HZ6\"\n}";

			var example = exampleJson != null
				? JsonConvert.DeserializeObject<NewParcelInfo>(exampleJson)
				: default(NewParcelInfo);
			//TODO: Change the data returned
			return new ObjectResult(example);
		}
	}
}