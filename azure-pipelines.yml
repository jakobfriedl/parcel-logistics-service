# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  - main
  
pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: "dotnet build"
  inputs:
    command: 'build'
    projects: './src/services/FH.ParcelLogistics.Services/FH.ParcelLogistics.Services.csproj'
    
- task: DotNetCoreCLI@2
  displayName: "dotnet test"
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
    publishTestResults: true
- task: reportgenerator@5
  displayName: "Merge Codecoverage Results"
  inputs:
    reports: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
    targetdir: '$(Build.SourcesDirectory)/coverageresults'
- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/coverageresults/Cobertura.xml'

- task: CopyFiles@2
  inputs:
    targetFolder: '$(Build.ArtifactStagingDirectory)'    

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: './src/services/FH.ParcelLogistics.Services/bin/$(buildConfiguration)/'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  displayName: Publish integration test artifacts
  inputs:
    PathtoPublish: './src/tests/FH.ParcelLogistics.IntegrationTests/bin/$(buildConfiguration)/'
    ArtifactName: 'integration-tests'
    publishLocation: 'Container'